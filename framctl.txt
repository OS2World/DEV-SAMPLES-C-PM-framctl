Name: 		FrameCtl
Descripcion: 	frame control extensions demostration
Date: 		2023-06-07
Version:	1.01
----------------------------   

DESCRIPTION
-----------
PART 1 -  July 30, 1996

 Welcome to our new series on frame controls!  Although Merlin added
 support for the close button, our initial efforts were on Warp.  Also,
 we felt that it was important to leave our close button in the code to
 illustrate the concept of frame extensions.  If you're familiar with
 VisualAge C++ for OS/2 or its predecessor, C Set++, the manifestation
 of this concept is provided via the Open Class Library class,
 IFrameExtension.

PART 2 - September 2, 1996

 Welcome to the 2nd article in our series on frame controls!  If you
 have suggestions on articles you would like to see, please forward
 them to us.    If you're familiar with VisualAge C++ for OS/2 V3.0
 or its predecessor, C Set++ V2.1, the manifestation of this concept
 is provided via the Open Class Library class,
 IFrameExtension.

 Future articles that we plan to write include the new Dynamic Job
 Properties support for printing in OS/2 Warp V4.0, and how to enable
 your custom controls for use within the IMultiCellCanvas class that is
 part of the Open Class Library.


PART 3 - October 7, 1996

 Welcome to the 3nd article in our series on frame controls!  If you
 have suggestions on articles you would like to see, please forward
 them to us.    If you're familiar with VisualAge C++ for OS/2 V3.0
 or its predecessor, C Set++ V2.1, the manifestation of this concept
 is provided via the Open Class Library class,
 IFrameExtension.

 Future articles that we plan to write include support for JAVA applets in
 OS/2 Warp V4.0, the new Dynamic Job Properties support for printing in OS/2
 Warp V4.0, and how to enable your custom controls for use within the
 IMultiCellCanvas class that is part of the Open Class Library.

This samples are part of the OS/2 Magazine, GUI Corner column,
- "A Picture Perfect Control" - October 1996 issue.
- "A Picture Perfect Control - The Sequel" - November 1996 issue.
- "A Picture Perfect Control - The Finale" - December 1996 issue.

REQUIREMENTS
------------
- yum install git gcc make libc-devel binutils watcom-wrc watcom-wlink-hll watcom-wipfc

COMPILE INSTRUCTIONS
--------------------
This version of this sample was modified to compile on ArcaOS with GCC 9 compiler. 

1) Remember to have correct header files your path. For GCC the correct ones are the included on the "libc-devel", not the ones from the OS/2 Toolkit. Check your config.sys for "SET INCLUDE=C:\usr\include"

2) Since I'm using the Watcom Resource Compiler (open source) instead of the classic rc.exe, and the the Watcom Linker, intead of the classic ilink.exe, add to your config.sys...
 SET EMXOMFLD_LINKER=wl.exe
 SET EMXOMFLD_TYPE=WLINK
 SET EMXOMFLD_RC_TYPE=WRC
 SET EMXOMFLD_RC=wrc.exe

3) Run "make" or "make 2>&1 |tee make.out" to get the log file.

TOOLS USED
----------
- ArcaOS	- Verion 5.0.7
- wrc 		- Version 2.0beta1
- gcc		- gcc (GCC) 9.2.0 20190812 (OS/2 RPM build 9.2.0-5.oc00)
- make 		- Version 3.81 k2 (2017-11-10)
- wipfc		- Open Watcom OS/2 Help Compiler Version 2.0beta1

TROUBLESHOOT
------------
The compile produce will run by just executing make on the directory, but a compile.cmd file is includes to store the log in a file. If you want to save the log file you can run it as "nmake 2>&1 |tee make.out". The log will be saved into the "make.out" file.

HISTORY
---------- 
- 1.01 - 2023-04-27
Changed version to compile on gcc and to run on ArcaOS 5.0.7.

- 1.0
Original version by Mark Benge and Matt Smith   


LICENSE
-------
The 3-Clause BSD License.


DISCLAIMER OF WARRANTIES
------------------------                                            
The following [enclosed] code is sample code created by IBM          
Corporation and Prominare Inc.  This sample code is not part of any  
standard IBM product and is provided to you solely for the purpose   
of assisting you in the development of your applications.  The code  
is provided "AS IS", without warranty of any kind.  Neither IBM nor  
Prominare shall be liable for any damages arising out of your        
use of the sample code, even if they have been advised of the        
possibility of such damages.  

AUTHORS
-------
- Martin Iturbide (2023)
- Mark Benge
- Matt Smith